# -*- coding: utf-8 -*-
"""ML2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VrF_XIlMdBv-EmrOgzVvZ4gzqotcAFHp
"""

import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as mp
x = np.array([100,200,300,400,500]).reshape(-1,1)
print(x)
y = np.array([600,700,800,900,1000])
print(y)
model = LinearRegression()
model.fit(x,y)
r_sq=model.score(x,y)
print(r_sq)
print('COEFFICIENT', r_sq)
print('SLOPE', model.coef_)
y_pred = model.predict(x)
print(y_pred)
mp.plot(x,y)

from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
cancer = load_breast_cancer()
x_train , x_test, y_train, y_test = train_test_split(cancer.data, cancer.target, random_state=1)

print(x_train.shape)
print(x_test.shape)

scaler=MinMaxScaler()

scaler.fit(x_train)
x_train_scaled = scaler.transform(x_train)
print("transformed shape: {}".format(x_train_scaled.shape))
print("per.feature minimum before scaling:\n {}".format(x_train.min(axis=0)))
print("per.feature maximum before scaling:\n {}".format(x_train.max(axis=0)))
print("per.feature minimum after scaling:\n {}".format(x_train_scaled.min(axis=0)))
print("per.feature maximum after scaling:\n {}".format(x_train_scaled.max(axis=0)))